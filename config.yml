token: "lip_wDzDPU66qxgxZGvyj0sB"    # Lichess OAuth2 Token.
url: "https://lichess.org/"  # Lichess base URL.

engine:                      # Engine settings.
  dir: "./"                  # Directory containing engines, relative to this project.
  name: "stockfish_x64_modern"    # Binary name of the engine to use.
  working_dir: ""            # Directory where the chess engine will read and write files. If blank or missing, the current directory is used.
  protocol: "uci"            # "uci" or "xboard"
  ponder: true               # Think on opponent's time.
  polyglot:
    enabled: true           # Activate polyglot book.
    book:
      standard:              # List of book file paths for variant standard.
        - Goi5.1.bin
        - Drawkiller_EloZoom_big.bin
        - Goi5.1.bin
        - Perfect2021.bin
        - tcec.bin
        - komodo.bin
        - elo3300.bin
        - Cerebellum3Merge.bin
      atomic: # list of book file paths for variant atomic
        - atomic.bin
#      etc.
      antichess:
        - antichess.bin
      horde:
        - horde.bin
      racingkings:
        - racingKings.bin
      3check:
        - threeCheck.bin
      kingofthehill:
        - kingofthehill.bin
#      use the same pattern for giveaway, crazyhouse, horde, kingofthehill, racingkings, 3check as well
      min_weight: 100          # selects move with highest weight but not below this value
      selection: "best_move" # move slection is one of "weighted_random", "uniform_random" or "best_move" (but not below the min_weight in 2. and 3. case)
    max_depth: 245             # half move max depth
    
  draw_or_resign:
    resign_enabled: false
    resign_score: -1000      # If the score is less than or equal to this value, the bot resigns (in cp).
    resign_for_egtb_minus_two: true # If true the bot will resign in positions where the online_egtb returns a wdl of -2.
    resign_moves: 3          # How many moves in a row the score has to be below the resign value.
    offer_draw_enabled: true
    offer_draw_score: 0      # If the absolute value of the score is less than or equal to this value, the bot offers/accepts draw (in cp).
    offer_draw_for_egtb_zero: true # If true the bot will offer/accept draw in positions where the online_egtb returns a wdl of 0.
    offer_draw_moves: 5      # How many moves in a row the absolute value of the score has to be below the draw value.
    offer_draw_pieces: 10    # Only if the pieces on board are less than or equal to this value, the bot offers/accepts draw.
  online_moves:
    chessdb_book:
      enabled: false
      min_time: 20
      move_quality: "good"   # One of "all", "good", "best".
      min_depth: 20          # Only for move_quality: "best".
      contribute: true
    lichess_cloud_analysis:
      enabled: true
      min_time: 20
      move_quality: "best"   # One of "good", "best".
      max_score_difference: 50 # Only for move_quality: "good". The maximum score difference (in cp) between the best move and the other moves.
      min_depth: 245
      min_knodes: 90000
    online_egtb:
      enabled: true
      min_time: 20
      max_pieces: 7
      source: "lichess"      # One of "lichess", "chessdb".
      move_quality: "best"   # One of "good", "best".
# engine_options:           # any custom command line params to pass to the engine
#   cpuct: 3.1
  uci_options:               # arbitrary UCI options passed to the engine
 
option name Contempt type spin : 24
option name Analysis Contempt type combo : Both var Off var White var Black var Both
option name Threads type spin : 4
option name Hash type spin : 536
option name Ponder type check : true
option name MultiPV type spin : 1
option name Skill Level type spin : 20
option name Move Overhead type spin : 5000
option name nodestime type spin : 100000
option name UCI_Chess960 type check : false
option name UCI_AnalyseMode type check : false
option name UCI_LimitStrength type check : false
option name UCI_Elo type spin : 2850
option name UCI_ShowWDL type check : false
option name SyzygyPath type string : ./syzygy
option name SyzygyProbeDepth type spin : 100
option name Syzygy50MoveRule type check : true
option name SyzygyProbeLimit type spin : 7
option name Use NNUE type check : true
#go_commands:             # additional options to pass to the UCI go command
#   nodes: 10000               # Search so many nodes only.
#   depth: 245               # Search depth ply only.
#   movetime: 1         # Integer. Search exactly movetime milliseconds.
#  xboard_options:            # arbitrary xboard options passed to the engine
#    cores: "4"
#    memory: "4096"
#    egtpath:                 # dir containing egtb, relative to this project
#     gaviota: "Gaviota path"
#     nalimov: "Nalimov Path"
#     scorpio: "Scorpio Path"
#     syzygy: "Syzygy Path"
#  silence_stderr: false      # some engines (yes you, leela) are very noisy

abort_time: 60               # time to abort a game in seconds when there is no activity
fake_think_time: false       # artificially slow down the bot to pretend like it's thinking
rate_limiting_delay: 0       # Time (in ms) to delay after sending a move to prevent "Too Many Requests" errors.
move_overhead: 5000          # Increase if your bot flags games too often.

correspondence:
    move_time: 60            # Time in seconds to search in correspondence games.
    checkin_period: 600      # How often to check for opponent moves in correspondence games after disconnecting.
    disconnect_time: 300     # Time before disconnecting from a correspondence game.
    ponder: false            # Ponder in correspondence games the bot is connected to.

challenge:                   # Incoming challenges.
  concurrency: 1             # Number of games to play simultaneously.
  sort_by: "best"            # Possible values: "best" and "first".
  accept_bot: false          # Accepts challenges coming from other bots.
  only_bot: false            # Accept challenges by bots only.
  max_increment: 180         # Maximum amount of increment to accept a challenge. The max is 180. Set to 0 for no increment.
  min_increment: 0           # Minimum amount of increment to accept a challenge.
  max_base: 315360000        # Maximum amount of base time to accept a challenge. The max is 315360000 (10 years).
  min_base: 60                # Minimum amount of base time to accept a challenge.  variants:                  # chess variants to accept (http://lichess.org/variant)
    - standard
#   - fromPosition
    - antichess
    - atomic
    - chess960
    - crazyhouse
    - horde
    - kingOfTheHill
    - racingKings
    - threeCheck
  time_controls:             # time controls to accept
    - bullet
    - blitz
    - rapid
    - classical
    - correspondence
  modes:                     # game modes to accept
    - casual                 # unrated games
    - rated                  # rated games - must comment if the engine doesn't try to win

#greeting:
    # Optional substitution keywords (include curly braces):
    #   {opponent} to insert opponent's name
    #   {me} to insert bot's name
    # Any other words in curly braces will be removed.
    #hello: "Hi! I'm {me}. Good luck! Type !help for a list of commands I can respond to." # Message to send to chat at the start of a game
    #goodbye: "Good game!" # Message to send to chat at the end of a game
